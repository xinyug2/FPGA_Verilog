|DE1_Soc
CLOCK_50 => CLOCK_50.IN1
HEX0[0] << hex:d0.port5
HEX0[1] << hex:d0.port5
HEX0[2] << hex:d0.port5
HEX0[3] << hex:d0.port5
HEX0[4] << hex:d0.port5
HEX0[5] << hex:d0.port5
HEX0[6] << hex:d0.port5
HEX1[0] << hex:d1.port5
HEX1[1] << hex:d1.port5
HEX1[2] << hex:d1.port5
HEX1[3] << hex:d1.port5
HEX1[4] << hex:d1.port5
HEX1[5] << hex:d1.port5
HEX1[6] << hex:d1.port5
HEX2[0] << hex:d2.port5
HEX2[1] << hex:d2.port5
HEX2[2] << hex:d2.port5
HEX2[3] << hex:d2.port5
HEX2[4] << hex:d2.port5
HEX2[5] << hex:d2.port5
HEX2[6] << hex:d2.port5
HEX3[0] << <VCC>
HEX3[1] << <VCC>
HEX3[2] << <VCC>
HEX3[3] << <VCC>
HEX3[4] << <VCC>
HEX3[5] << <VCC>
HEX3[6] << <VCC>
HEX4[0] << <VCC>
HEX4[1] << <VCC>
HEX4[2] << <VCC>
HEX4[3] << <VCC>
HEX4[4] << <VCC>
HEX4[5] << <VCC>
HEX4[6] << <VCC>
HEX5[0] << <VCC>
HEX5[1] << <VCC>
HEX5[2] << <VCC>
HEX5[3] << <VCC>
HEX5[4] << <VCC>
HEX5[5] << <VCC>
HEX5[6] << <VCC>
KEY[0] => _.IN1
KEY[1] => ~NO_FANOUT~
KEY[2] => ~NO_FANOUT~
KEY[3] => ~NO_FANOUT~
LEDR[0] << <GND>
LEDR[1] << <GND>
LEDR[2] << <GND>
LEDR[3] << <GND>
LEDR[4] << <GND>
LEDR[5] << <GND>
LEDR[6] << <GND>
LEDR[7] << <GND>
LEDR[8] << <GND>
LEDR[9] << <GND>
SW[0] => ~NO_FANOUT~
SW[1] => ~NO_FANOUT~
SW[2] => ~NO_FANOUT~
SW[3] => ~NO_FANOUT~
SW[4] => ~NO_FANOUT~
SW[5] => ~NO_FANOUT~
SW[6] => ~NO_FANOUT~
SW[7] => ~NO_FANOUT~
SW[8] => ~NO_FANOUT~
SW[9] => reset.IN15
GPIO_0[0] << <GND>
GPIO_0[1] << <GND>
GPIO_0[2] << <GND>
GPIO_0[3] << <GND>
GPIO_0[4] << <GND>
GPIO_0[5] << <GND>
GPIO_0[6] << <GND>
GPIO_0[7] << <GND>
GPIO_0[8] << <GND>
GPIO_0[9] << <GND>
GPIO_0[10] << <GND>
GPIO_0[11] << <GND>
GPIO_0[12] << led_matrix_driver:mDriver.row_sink[0]
GPIO_0[13] << led_matrix_driver:mDriver.row_sink[1]
GPIO_0[14] << led_matrix_driver:mDriver.row_sink[2]
GPIO_0[15] << led_matrix_driver:mDriver.row_sink[3]
GPIO_0[16] << led_matrix_driver:mDriver.row_sink[4]
GPIO_0[17] << led_matrix_driver:mDriver.row_sink[5]
GPIO_0[18] << led_matrix_driver:mDriver.row_sink[6]
GPIO_0[19] << led_matrix_driver:mDriver.row_sink[7]
GPIO_0[20] << led_matrix_driver:mDriver.red_driver[0]
GPIO_0[21] << led_matrix_driver:mDriver.red_driver[1]
GPIO_0[22] << led_matrix_driver:mDriver.red_driver[2]
GPIO_0[23] << led_matrix_driver:mDriver.red_driver[3]
GPIO_0[24] << led_matrix_driver:mDriver.red_driver[4]
GPIO_0[25] << led_matrix_driver:mDriver.red_driver[5]
GPIO_0[26] << led_matrix_driver:mDriver.red_driver[6]
GPIO_0[27] << led_matrix_driver:mDriver.red_driver[7]
GPIO_0[28] << led_matrix_driver:mDriver.green_driver[0]
GPIO_0[29] << led_matrix_driver:mDriver.green_driver[1]
GPIO_0[30] << led_matrix_driver:mDriver.green_driver[2]
GPIO_0[31] << led_matrix_driver:mDriver.green_driver[3]
GPIO_0[32] << led_matrix_driver:mDriver.green_driver[4]
GPIO_0[33] << led_matrix_driver:mDriver.green_driver[5]
GPIO_0[34] << led_matrix_driver:mDriver.green_driver[6]
GPIO_0[35] << led_matrix_driver:mDriver.green_driver[7]


|DE1_Soc|clock_divider:cdiv
clock => divided_clocks[0]~reg0.CLK
clock => divided_clocks[1]~reg0.CLK
clock => divided_clocks[2]~reg0.CLK
clock => divided_clocks[3]~reg0.CLK
clock => divided_clocks[4]~reg0.CLK
clock => divided_clocks[5]~reg0.CLK
clock => divided_clocks[6]~reg0.CLK
clock => divided_clocks[7]~reg0.CLK
clock => divided_clocks[8]~reg0.CLK
clock => divided_clocks[9]~reg0.CLK
clock => divided_clocks[10]~reg0.CLK
clock => divided_clocks[11]~reg0.CLK
clock => divided_clocks[12]~reg0.CLK
clock => divided_clocks[13]~reg0.CLK
clock => divided_clocks[14]~reg0.CLK
clock => divided_clocks[15]~reg0.CLK
clock => divided_clocks[16]~reg0.CLK
clock => divided_clocks[17]~reg0.CLK
clock => divided_clocks[18]~reg0.CLK
clock => divided_clocks[19]~reg0.CLK
clock => divided_clocks[20]~reg0.CLK
clock => divided_clocks[21]~reg0.CLK
clock => divided_clocks[22]~reg0.CLK
clock => divided_clocks[23]~reg0.CLK
clock => divided_clocks[24]~reg0.CLK
clock => divided_clocks[25]~reg0.CLK
clock => divided_clocks[26]~reg0.CLK
clock => divided_clocks[27]~reg0.CLK
clock => divided_clocks[28]~reg0.CLK
clock => divided_clocks[29]~reg0.CLK
clock => divided_clocks[30]~reg0.CLK
clock => divided_clocks[31]~reg0.CLK
divided_clocks[0] <= divided_clocks[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[1] <= divided_clocks[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[2] <= divided_clocks[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[3] <= divided_clocks[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[4] <= divided_clocks[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[5] <= divided_clocks[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[6] <= divided_clocks[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[7] <= divided_clocks[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[8] <= divided_clocks[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[9] <= divided_clocks[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[10] <= divided_clocks[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[11] <= divided_clocks[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[12] <= divided_clocks[12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[13] <= divided_clocks[13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[14] <= divided_clocks[14]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[15] <= divided_clocks[15]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[16] <= divided_clocks[16]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[17] <= divided_clocks[17]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[18] <= divided_clocks[18]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[19] <= divided_clocks[19]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[20] <= divided_clocks[20]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[21] <= divided_clocks[21]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[22] <= divided_clocks[22]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[23] <= divided_clocks[23]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[24] <= divided_clocks[24]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[25] <= divided_clocks[25]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[26] <= divided_clocks[26]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[27] <= divided_clocks[27]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[28] <= divided_clocks[28]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[29] <= divided_clocks[29]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[30] <= divided_clocks[30]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[31] <= divided_clocks[31]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|DE1_Soc|D_FF:ui
clk => ps.CLK
reset => ps.OUTPUTSELECT
T => ps.DATAA
O <= ps.DB_MAX_OUTPUT_PORT_TYPE


|DE1_Soc|activate:gs
clk => ps.CLK
reset => ps.OUTPUTSELECT
press => ns.IN1
active <= ps.DB_MAX_OUTPUT_PORT_TYPE


|DE1_Soc|LFSR:r4
clk => out[0]~reg0.CLK
clk => out[1]~reg0.CLK
clk => out[2]~reg0.CLK
reset => always0.IN0
active => always0.IN1
out[0] <= out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[2] <= out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|DE1_Soc|pipe_generator:pip0
clk => gap.CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => ps[0].CLK
clk => ps[1].CLK
clk => ps[2].CLK
clk => ps[3].CLK
clk => ps[4].CLK
clk => ps[5].CLK
clk => ps[6].CLK
clk => ps[7].CLK
reset => always1.IN0
active => always1.IN1
gameover => ns[7].OUTPUTSELECT
gameover => ns[6].OUTPUTSELECT
gameover => ns[5].OUTPUTSELECT
gameover => ns[4].OUTPUTSELECT
gameover => ns[3].OUTPUTSELECT
gameover => ns[2].OUTPUTSELECT
gameover => ns[1].OUTPUTSELECT
gameover => ns[0].OUTPUTSELECT
index[0] => Decoder0.IN2
index[1] => Decoder0.IN1
index[1] => ns.DATAB
index[2] => Decoder0.IN0
leds[0] <= ps[0].DB_MAX_OUTPUT_PORT_TYPE
leds[1] <= ps[1].DB_MAX_OUTPUT_PORT_TYPE
leds[2] <= ps[2].DB_MAX_OUTPUT_PORT_TYPE
leds[3] <= ps[3].DB_MAX_OUTPUT_PORT_TYPE
leds[4] <= ps[4].DB_MAX_OUTPUT_PORT_TYPE
leds[5] <= ps[5].DB_MAX_OUTPUT_PORT_TYPE
leds[6] <= ps[6].DB_MAX_OUTPUT_PORT_TYPE
leds[7] <= ps[7].DB_MAX_OUTPUT_PORT_TYPE


|DE1_Soc|pipeShift:pip1
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => ps[0].CLK
clk => ps[1].CLK
clk => ps[2].CLK
clk => ps[3].CLK
clk => ps[4].CLK
clk => ps[5].CLK
clk => ps[6].CLK
clk => ps[7].CLK
reset => always1.IN0
active => always1.IN1
gameover => ns[7].OUTPUTSELECT
gameover => ns[6].OUTPUTSELECT
gameover => ns[5].OUTPUTSELECT
gameover => ns[4].OUTPUTSELECT
gameover => ns[3].OUTPUTSELECT
gameover => ns[2].OUTPUTSELECT
gameover => ns[1].OUTPUTSELECT
gameover => ns[0].OUTPUTSELECT
newPattern[0] => ns[0].DATAA
newPattern[1] => ns[1].DATAA
newPattern[2] => ns[2].DATAA
newPattern[3] => ns[3].DATAA
newPattern[4] => ns[4].DATAA
newPattern[5] => ns[5].DATAA
newPattern[6] => ns[6].DATAA
newPattern[7] => ns[7].DATAA
pipe[0] <= ps[0].DB_MAX_OUTPUT_PORT_TYPE
pipe[1] <= ps[1].DB_MAX_OUTPUT_PORT_TYPE
pipe[2] <= ps[2].DB_MAX_OUTPUT_PORT_TYPE
pipe[3] <= ps[3].DB_MAX_OUTPUT_PORT_TYPE
pipe[4] <= ps[4].DB_MAX_OUTPUT_PORT_TYPE
pipe[5] <= ps[5].DB_MAX_OUTPUT_PORT_TYPE
pipe[6] <= ps[6].DB_MAX_OUTPUT_PORT_TYPE
pipe[7] <= ps[7].DB_MAX_OUTPUT_PORT_TYPE


|DE1_Soc|pipeShift:pip2
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => ps[0].CLK
clk => ps[1].CLK
clk => ps[2].CLK
clk => ps[3].CLK
clk => ps[4].CLK
clk => ps[5].CLK
clk => ps[6].CLK
clk => ps[7].CLK
reset => always1.IN0
active => always1.IN1
gameover => ns[7].OUTPUTSELECT
gameover => ns[6].OUTPUTSELECT
gameover => ns[5].OUTPUTSELECT
gameover => ns[4].OUTPUTSELECT
gameover => ns[3].OUTPUTSELECT
gameover => ns[2].OUTPUTSELECT
gameover => ns[1].OUTPUTSELECT
gameover => ns[0].OUTPUTSELECT
newPattern[0] => ns[0].DATAA
newPattern[1] => ns[1].DATAA
newPattern[2] => ns[2].DATAA
newPattern[3] => ns[3].DATAA
newPattern[4] => ns[4].DATAA
newPattern[5] => ns[5].DATAA
newPattern[6] => ns[6].DATAA
newPattern[7] => ns[7].DATAA
pipe[0] <= ps[0].DB_MAX_OUTPUT_PORT_TYPE
pipe[1] <= ps[1].DB_MAX_OUTPUT_PORT_TYPE
pipe[2] <= ps[2].DB_MAX_OUTPUT_PORT_TYPE
pipe[3] <= ps[3].DB_MAX_OUTPUT_PORT_TYPE
pipe[4] <= ps[4].DB_MAX_OUTPUT_PORT_TYPE
pipe[5] <= ps[5].DB_MAX_OUTPUT_PORT_TYPE
pipe[6] <= ps[6].DB_MAX_OUTPUT_PORT_TYPE
pipe[7] <= ps[7].DB_MAX_OUTPUT_PORT_TYPE


|DE1_Soc|pipeShift:pip3
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => ps[0].CLK
clk => ps[1].CLK
clk => ps[2].CLK
clk => ps[3].CLK
clk => ps[4].CLK
clk => ps[5].CLK
clk => ps[6].CLK
clk => ps[7].CLK
reset => always1.IN0
active => always1.IN1
gameover => ns[7].OUTPUTSELECT
gameover => ns[6].OUTPUTSELECT
gameover => ns[5].OUTPUTSELECT
gameover => ns[4].OUTPUTSELECT
gameover => ns[3].OUTPUTSELECT
gameover => ns[2].OUTPUTSELECT
gameover => ns[1].OUTPUTSELECT
gameover => ns[0].OUTPUTSELECT
newPattern[0] => ns[0].DATAA
newPattern[1] => ns[1].DATAA
newPattern[2] => ns[2].DATAA
newPattern[3] => ns[3].DATAA
newPattern[4] => ns[4].DATAA
newPattern[5] => ns[5].DATAA
newPattern[6] => ns[6].DATAA
newPattern[7] => ns[7].DATAA
pipe[0] <= ps[0].DB_MAX_OUTPUT_PORT_TYPE
pipe[1] <= ps[1].DB_MAX_OUTPUT_PORT_TYPE
pipe[2] <= ps[2].DB_MAX_OUTPUT_PORT_TYPE
pipe[3] <= ps[3].DB_MAX_OUTPUT_PORT_TYPE
pipe[4] <= ps[4].DB_MAX_OUTPUT_PORT_TYPE
pipe[5] <= ps[5].DB_MAX_OUTPUT_PORT_TYPE
pipe[6] <= ps[6].DB_MAX_OUTPUT_PORT_TYPE
pipe[7] <= ps[7].DB_MAX_OUTPUT_PORT_TYPE


|DE1_Soc|pipeShift:pip4
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => ps[0].CLK
clk => ps[1].CLK
clk => ps[2].CLK
clk => ps[3].CLK
clk => ps[4].CLK
clk => ps[5].CLK
clk => ps[6].CLK
clk => ps[7].CLK
reset => always1.IN0
active => always1.IN1
gameover => ns[7].OUTPUTSELECT
gameover => ns[6].OUTPUTSELECT
gameover => ns[5].OUTPUTSELECT
gameover => ns[4].OUTPUTSELECT
gameover => ns[3].OUTPUTSELECT
gameover => ns[2].OUTPUTSELECT
gameover => ns[1].OUTPUTSELECT
gameover => ns[0].OUTPUTSELECT
newPattern[0] => ns[0].DATAA
newPattern[1] => ns[1].DATAA
newPattern[2] => ns[2].DATAA
newPattern[3] => ns[3].DATAA
newPattern[4] => ns[4].DATAA
newPattern[5] => ns[5].DATAA
newPattern[6] => ns[6].DATAA
newPattern[7] => ns[7].DATAA
pipe[0] <= ps[0].DB_MAX_OUTPUT_PORT_TYPE
pipe[1] <= ps[1].DB_MAX_OUTPUT_PORT_TYPE
pipe[2] <= ps[2].DB_MAX_OUTPUT_PORT_TYPE
pipe[3] <= ps[3].DB_MAX_OUTPUT_PORT_TYPE
pipe[4] <= ps[4].DB_MAX_OUTPUT_PORT_TYPE
pipe[5] <= ps[5].DB_MAX_OUTPUT_PORT_TYPE
pipe[6] <= ps[6].DB_MAX_OUTPUT_PORT_TYPE
pipe[7] <= ps[7].DB_MAX_OUTPUT_PORT_TYPE


|DE1_Soc|pipeShift:pip5
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => ps[0].CLK
clk => ps[1].CLK
clk => ps[2].CLK
clk => ps[3].CLK
clk => ps[4].CLK
clk => ps[5].CLK
clk => ps[6].CLK
clk => ps[7].CLK
reset => always1.IN0
active => always1.IN1
gameover => ns[7].OUTPUTSELECT
gameover => ns[6].OUTPUTSELECT
gameover => ns[5].OUTPUTSELECT
gameover => ns[4].OUTPUTSELECT
gameover => ns[3].OUTPUTSELECT
gameover => ns[2].OUTPUTSELECT
gameover => ns[1].OUTPUTSELECT
gameover => ns[0].OUTPUTSELECT
newPattern[0] => ns[0].DATAA
newPattern[1] => ns[1].DATAA
newPattern[2] => ns[2].DATAA
newPattern[3] => ns[3].DATAA
newPattern[4] => ns[4].DATAA
newPattern[5] => ns[5].DATAA
newPattern[6] => ns[6].DATAA
newPattern[7] => ns[7].DATAA
pipe[0] <= ps[0].DB_MAX_OUTPUT_PORT_TYPE
pipe[1] <= ps[1].DB_MAX_OUTPUT_PORT_TYPE
pipe[2] <= ps[2].DB_MAX_OUTPUT_PORT_TYPE
pipe[3] <= ps[3].DB_MAX_OUTPUT_PORT_TYPE
pipe[4] <= ps[4].DB_MAX_OUTPUT_PORT_TYPE
pipe[5] <= ps[5].DB_MAX_OUTPUT_PORT_TYPE
pipe[6] <= ps[6].DB_MAX_OUTPUT_PORT_TYPE
pipe[7] <= ps[7].DB_MAX_OUTPUT_PORT_TYPE


|DE1_Soc|pipeShift:pip6
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => ps[0].CLK
clk => ps[1].CLK
clk => ps[2].CLK
clk => ps[3].CLK
clk => ps[4].CLK
clk => ps[5].CLK
clk => ps[6].CLK
clk => ps[7].CLK
reset => always1.IN0
active => always1.IN1
gameover => ns[7].OUTPUTSELECT
gameover => ns[6].OUTPUTSELECT
gameover => ns[5].OUTPUTSELECT
gameover => ns[4].OUTPUTSELECT
gameover => ns[3].OUTPUTSELECT
gameover => ns[2].OUTPUTSELECT
gameover => ns[1].OUTPUTSELECT
gameover => ns[0].OUTPUTSELECT
newPattern[0] => ns[0].DATAA
newPattern[1] => ns[1].DATAA
newPattern[2] => ns[2].DATAA
newPattern[3] => ns[3].DATAA
newPattern[4] => ns[4].DATAA
newPattern[5] => ns[5].DATAA
newPattern[6] => ns[6].DATAA
newPattern[7] => ns[7].DATAA
pipe[0] <= ps[0].DB_MAX_OUTPUT_PORT_TYPE
pipe[1] <= ps[1].DB_MAX_OUTPUT_PORT_TYPE
pipe[2] <= ps[2].DB_MAX_OUTPUT_PORT_TYPE
pipe[3] <= ps[3].DB_MAX_OUTPUT_PORT_TYPE
pipe[4] <= ps[4].DB_MAX_OUTPUT_PORT_TYPE
pipe[5] <= ps[5].DB_MAX_OUTPUT_PORT_TYPE
pipe[6] <= ps[6].DB_MAX_OUTPUT_PORT_TYPE
pipe[7] <= ps[7].DB_MAX_OUTPUT_PORT_TYPE


|DE1_Soc|pipeShift:pip7
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => ps[0].CLK
clk => ps[1].CLK
clk => ps[2].CLK
clk => ps[3].CLK
clk => ps[4].CLK
clk => ps[5].CLK
clk => ps[6].CLK
clk => ps[7].CLK
reset => always1.IN0
active => always1.IN1
gameover => ns[7].OUTPUTSELECT
gameover => ns[6].OUTPUTSELECT
gameover => ns[5].OUTPUTSELECT
gameover => ns[4].OUTPUTSELECT
gameover => ns[3].OUTPUTSELECT
gameover => ns[2].OUTPUTSELECT
gameover => ns[1].OUTPUTSELECT
gameover => ns[0].OUTPUTSELECT
newPattern[0] => ns[0].DATAA
newPattern[1] => ns[1].DATAA
newPattern[2] => ns[2].DATAA
newPattern[3] => ns[3].DATAA
newPattern[4] => ns[4].DATAA
newPattern[5] => ns[5].DATAA
newPattern[6] => ns[6].DATAA
newPattern[7] => ns[7].DATAA
pipe[0] <= ps[0].DB_MAX_OUTPUT_PORT_TYPE
pipe[1] <= ps[1].DB_MAX_OUTPUT_PORT_TYPE
pipe[2] <= ps[2].DB_MAX_OUTPUT_PORT_TYPE
pipe[3] <= ps[3].DB_MAX_OUTPUT_PORT_TYPE
pipe[4] <= ps[4].DB_MAX_OUTPUT_PORT_TYPE
pipe[5] <= ps[5].DB_MAX_OUTPUT_PORT_TYPE
pipe[6] <= ps[6].DB_MAX_OUTPUT_PORT_TYPE
pipe[7] <= ps[7].DB_MAX_OUTPUT_PORT_TYPE


|DE1_Soc|bird:l0
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => ps.CLK
reset => always1.IN0
active => always1.IN1
gameover => ns.OUTPUTSELECT
press => ns.IN0
press => ns.IN0
press => ns.IN0
resetState => ps.DATAB
uplight => ns.IN1
downlight => ns.IN1
uplimit => ns.IN1
light <= ps.DB_MAX_OUTPUT_PORT_TYPE


|DE1_Soc|bird:l1
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => ps.CLK
reset => always1.IN0
active => always1.IN1
gameover => ns.OUTPUTSELECT
press => ns.IN0
press => ns.IN0
press => ns.IN0
resetState => ps.DATAB
uplight => ns.IN1
downlight => ns.IN1
uplimit => ns.IN1
light <= ps.DB_MAX_OUTPUT_PORT_TYPE


|DE1_Soc|bird:l2
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => ps.CLK
reset => always1.IN0
active => always1.IN1
gameover => ns.OUTPUTSELECT
press => ns.IN0
press => ns.IN0
press => ns.IN0
resetState => ps.DATAB
uplight => ns.IN1
downlight => ns.IN1
uplimit => ns.IN1
light <= ps.DB_MAX_OUTPUT_PORT_TYPE


|DE1_Soc|bird:l3
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => ps.CLK
reset => always1.IN0
active => always1.IN1
gameover => ns.OUTPUTSELECT
press => ns.IN0
press => ns.IN0
press => ns.IN0
resetState => ps.DATAB
uplight => ns.IN1
downlight => ns.IN1
uplimit => ns.IN1
light <= ps.DB_MAX_OUTPUT_PORT_TYPE


|DE1_Soc|bird:l4
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => ps.CLK
reset => always1.IN0
active => always1.IN1
gameover => ns.OUTPUTSELECT
press => ns.IN0
press => ns.IN0
press => ns.IN0
resetState => ps.DATAB
uplight => ns.IN1
downlight => ns.IN1
uplimit => ns.IN1
light <= ps.DB_MAX_OUTPUT_PORT_TYPE


|DE1_Soc|bird:l5
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => ps.CLK
reset => always1.IN0
active => always1.IN1
gameover => ns.OUTPUTSELECT
press => ns.IN0
press => ns.IN0
press => ns.IN0
resetState => ps.DATAB
uplight => ns.IN1
downlight => ns.IN1
uplimit => ns.IN1
light <= ps.DB_MAX_OUTPUT_PORT_TYPE


|DE1_Soc|bird:l6
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => ps.CLK
reset => always1.IN0
active => always1.IN1
gameover => ns.OUTPUTSELECT
press => ns.IN0
press => ns.IN0
press => ns.IN0
resetState => ps.DATAB
uplight => ns.IN1
downlight => ns.IN1
uplimit => ns.IN1
light <= ps.DB_MAX_OUTPUT_PORT_TYPE


|DE1_Soc|bird:l7
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => ps.CLK
reset => always1.IN0
active => always1.IN1
gameover => ns.OUTPUTSELECT
press => ns.IN0
press => ns.IN0
press => ns.IN0
resetState => ps.DATAB
uplight => ns.IN1
downlight => ns.IN1
uplimit => ns.IN1
light <= ps.DB_MAX_OUTPUT_PORT_TYPE


|DE1_Soc|led_matrix_driver:mDriver
clock => count[0].CLK
clock => count[1].CLK
clock => count[2].CLK
red_array[0][0] => Mux7.IN7
red_array[0][1] => Mux6.IN7
red_array[0][2] => Mux5.IN7
red_array[0][3] => Mux4.IN7
red_array[0][4] => Mux3.IN7
red_array[0][5] => Mux2.IN7
red_array[0][6] => Mux1.IN7
red_array[0][7] => Mux0.IN7
red_array[1][0] => Mux7.IN6
red_array[1][1] => Mux6.IN6
red_array[1][2] => Mux5.IN6
red_array[1][3] => Mux4.IN6
red_array[1][4] => Mux3.IN6
red_array[1][5] => Mux2.IN6
red_array[1][6] => Mux1.IN6
red_array[1][7] => Mux0.IN6
red_array[2][0] => Mux7.IN5
red_array[2][1] => Mux6.IN5
red_array[2][2] => Mux5.IN5
red_array[2][3] => Mux4.IN5
red_array[2][4] => Mux3.IN5
red_array[2][5] => Mux2.IN5
red_array[2][6] => Mux1.IN5
red_array[2][7] => Mux0.IN5
red_array[3][0] => Mux7.IN4
red_array[3][1] => Mux6.IN4
red_array[3][2] => Mux5.IN4
red_array[3][3] => Mux4.IN4
red_array[3][4] => Mux3.IN4
red_array[3][5] => Mux2.IN4
red_array[3][6] => Mux1.IN4
red_array[3][7] => Mux0.IN4
red_array[4][0] => Mux7.IN3
red_array[4][1] => Mux6.IN3
red_array[4][2] => Mux5.IN3
red_array[4][3] => Mux4.IN3
red_array[4][4] => Mux3.IN3
red_array[4][5] => Mux2.IN3
red_array[4][6] => Mux1.IN3
red_array[4][7] => Mux0.IN3
red_array[5][0] => Mux7.IN2
red_array[5][1] => Mux6.IN2
red_array[5][2] => Mux5.IN2
red_array[5][3] => Mux4.IN2
red_array[5][4] => Mux3.IN2
red_array[5][5] => Mux2.IN2
red_array[5][6] => Mux1.IN2
red_array[5][7] => Mux0.IN2
red_array[6][0] => Mux7.IN1
red_array[6][1] => Mux6.IN1
red_array[6][2] => Mux5.IN1
red_array[6][3] => Mux4.IN1
red_array[6][4] => Mux3.IN1
red_array[6][5] => Mux2.IN1
red_array[6][6] => Mux1.IN1
red_array[6][7] => Mux0.IN1
red_array[7][0] => Mux7.IN0
red_array[7][1] => Mux6.IN0
red_array[7][2] => Mux5.IN0
red_array[7][3] => Mux4.IN0
red_array[7][4] => Mux3.IN0
red_array[7][5] => Mux2.IN0
red_array[7][6] => Mux1.IN0
red_array[7][7] => Mux0.IN0
green_array[0][0] => Mux15.IN7
green_array[0][1] => Mux14.IN7
green_array[0][2] => Mux13.IN7
green_array[0][3] => Mux12.IN7
green_array[0][4] => Mux11.IN7
green_array[0][5] => Mux10.IN7
green_array[0][6] => Mux9.IN7
green_array[0][7] => Mux8.IN7
green_array[1][0] => Mux15.IN6
green_array[1][1] => Mux14.IN6
green_array[1][2] => Mux13.IN6
green_array[1][3] => Mux12.IN6
green_array[1][4] => Mux11.IN6
green_array[1][5] => Mux10.IN6
green_array[1][6] => Mux9.IN6
green_array[1][7] => Mux8.IN6
green_array[2][0] => Mux15.IN5
green_array[2][1] => Mux14.IN5
green_array[2][2] => Mux13.IN5
green_array[2][3] => Mux12.IN5
green_array[2][4] => Mux11.IN5
green_array[2][5] => Mux10.IN5
green_array[2][6] => Mux9.IN5
green_array[2][7] => Mux8.IN5
green_array[3][0] => Mux15.IN4
green_array[3][1] => Mux14.IN4
green_array[3][2] => Mux13.IN4
green_array[3][3] => Mux12.IN4
green_array[3][4] => Mux11.IN4
green_array[3][5] => Mux10.IN4
green_array[3][6] => Mux9.IN4
green_array[3][7] => Mux8.IN4
green_array[4][0] => Mux15.IN3
green_array[4][1] => Mux14.IN3
green_array[4][2] => Mux13.IN3
green_array[4][3] => Mux12.IN3
green_array[4][4] => Mux11.IN3
green_array[4][5] => Mux10.IN3
green_array[4][6] => Mux9.IN3
green_array[4][7] => Mux8.IN3
green_array[5][0] => Mux15.IN2
green_array[5][1] => Mux14.IN2
green_array[5][2] => Mux13.IN2
green_array[5][3] => Mux12.IN2
green_array[5][4] => Mux11.IN2
green_array[5][5] => Mux10.IN2
green_array[5][6] => Mux9.IN2
green_array[5][7] => Mux8.IN2
green_array[6][0] => Mux15.IN1
green_array[6][1] => Mux14.IN1
green_array[6][2] => Mux13.IN1
green_array[6][3] => Mux12.IN1
green_array[6][4] => Mux11.IN1
green_array[6][5] => Mux10.IN1
green_array[6][6] => Mux9.IN1
green_array[6][7] => Mux8.IN1
green_array[7][0] => Mux15.IN0
green_array[7][1] => Mux14.IN0
green_array[7][2] => Mux13.IN0
green_array[7][3] => Mux12.IN0
green_array[7][4] => Mux11.IN0
green_array[7][5] => Mux10.IN0
green_array[7][6] => Mux9.IN0
green_array[7][7] => Mux8.IN0
red_driver[0] <= Mux7.DB_MAX_OUTPUT_PORT_TYPE
red_driver[1] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
red_driver[2] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
red_driver[3] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
red_driver[4] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
red_driver[5] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
red_driver[6] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
red_driver[7] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
green_driver[0] <= Mux15.DB_MAX_OUTPUT_PORT_TYPE
green_driver[1] <= Mux14.DB_MAX_OUTPUT_PORT_TYPE
green_driver[2] <= Mux13.DB_MAX_OUTPUT_PORT_TYPE
green_driver[3] <= Mux12.DB_MAX_OUTPUT_PORT_TYPE
green_driver[4] <= Mux11.DB_MAX_OUTPUT_PORT_TYPE
green_driver[5] <= Mux10.DB_MAX_OUTPUT_PORT_TYPE
green_driver[6] <= Mux9.DB_MAX_OUTPUT_PORT_TYPE
green_driver[7] <= Mux8.DB_MAX_OUTPUT_PORT_TYPE
row_sink[0] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
row_sink[1] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
row_sink[2] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
row_sink[3] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
row_sink[4] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
row_sink[5] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
row_sink[6] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
row_sink[7] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE


|DE1_Soc|crash:stat
clk => pp[0].CLK
clk => pp[1].CLK
clk => pp[2].CLK
clk => pp[3].CLK
clk => pp[4].CLK
clk => pp[5].CLK
clk => pp[6].CLK
clk => pp[7].CLK
clk => ps.CLK
reset => always1.IN0
active => always1.IN1
bird[0] => ns.IN1
bird[1] => ns.IN0
bird[2] => ns.IN0
bird[3] => ns.IN0
bird[4] => ns.IN0
bird[5] => ns.IN0
bird[6] => ns.IN0
bird[7] => ns.IN0
pipe[0] => pp.DATAA
pipe[0] => Equal1.IN7
pipe[1] => ns.IN1
pipe[1] => pp.DATAA
pipe[1] => Equal1.IN6
pipe[2] => ns.IN1
pipe[2] => pp.DATAA
pipe[2] => Equal1.IN5
pipe[3] => ns.IN1
pipe[3] => pp.DATAA
pipe[3] => Equal1.IN4
pipe[4] => ns.IN1
pipe[4] => pp.DATAA
pipe[4] => Equal1.IN3
pipe[5] => ns.IN1
pipe[5] => pp.DATAA
pipe[5] => Equal1.IN2
pipe[6] => ns.IN1
pipe[6] => pp.DATAA
pipe[6] => Equal1.IN1
pipe[7] => ns.IN1
pipe[7] => pp.DATAA
pipe[7] => Equal1.IN0
crashed <= ps.DB_MAX_OUTPUT_PORT_TYPE
addPoint <= addPoint.DB_MAX_OUTPUT_PORT_TYPE


|DE1_Soc|hex:d0
clk => ps[0].CLK
clk => ps[1].CLK
clk => ps[2].CLK
clk => ps[3].CLK
clk => ps[4].CLK
clk => ps[5].CLK
clk => ps[6].CLK
reset => always1.IN0
active => always1.IN1
dv[0] => ps.DATAB
dv[1] => ps.DATAB
dv[2] => ps.DATAB
dv[3] => ps.DATAB
dv[4] => ps.DATAB
dv[5] => ps.DATAB
dv[6] => ps.DATAB
increment => ns[6].OUTPUTSELECT
increment => ns[5].OUTPUTSELECT
increment => ns[4].OUTPUTSELECT
increment => ns[3].OUTPUTSELECT
increment => ns[2].OUTPUTSELECT
increment => ns[1].OUTPUTSELECT
increment => ns[0].OUTPUTSELECT
increment => cycle.IN1
display[0] <= ps[0].DB_MAX_OUTPUT_PORT_TYPE
display[1] <= ps[1].DB_MAX_OUTPUT_PORT_TYPE
display[2] <= ps[2].DB_MAX_OUTPUT_PORT_TYPE
display[3] <= ps[3].DB_MAX_OUTPUT_PORT_TYPE
display[4] <= ps[4].DB_MAX_OUTPUT_PORT_TYPE
display[5] <= ps[5].DB_MAX_OUTPUT_PORT_TYPE
display[6] <= ps[6].DB_MAX_OUTPUT_PORT_TYPE
cycle <= cycle.DB_MAX_OUTPUT_PORT_TYPE


|DE1_Soc|hex:d1
clk => ps[0].CLK
clk => ps[1].CLK
clk => ps[2].CLK
clk => ps[3].CLK
clk => ps[4].CLK
clk => ps[5].CLK
clk => ps[6].CLK
reset => always1.IN0
active => always1.IN1
dv[0] => ps.DATAB
dv[1] => ps.DATAB
dv[2] => ps.DATAB
dv[3] => ps.DATAB
dv[4] => ps.DATAB
dv[5] => ps.DATAB
dv[6] => ps.DATAB
increment => ns[6].OUTPUTSELECT
increment => ns[5].OUTPUTSELECT
increment => ns[4].OUTPUTSELECT
increment => ns[3].OUTPUTSELECT
increment => ns[2].OUTPUTSELECT
increment => ns[1].OUTPUTSELECT
increment => ns[0].OUTPUTSELECT
increment => cycle.IN1
display[0] <= ps[0].DB_MAX_OUTPUT_PORT_TYPE
display[1] <= ps[1].DB_MAX_OUTPUT_PORT_TYPE
display[2] <= ps[2].DB_MAX_OUTPUT_PORT_TYPE
display[3] <= ps[3].DB_MAX_OUTPUT_PORT_TYPE
display[4] <= ps[4].DB_MAX_OUTPUT_PORT_TYPE
display[5] <= ps[5].DB_MAX_OUTPUT_PORT_TYPE
display[6] <= ps[6].DB_MAX_OUTPUT_PORT_TYPE
cycle <= cycle.DB_MAX_OUTPUT_PORT_TYPE


|DE1_Soc|hex:d2
clk => ps[0].CLK
clk => ps[1].CLK
clk => ps[2].CLK
clk => ps[3].CLK
clk => ps[4].CLK
clk => ps[5].CLK
clk => ps[6].CLK
reset => always1.IN0
active => always1.IN1
dv[0] => ps.DATAB
dv[1] => ps.DATAB
dv[2] => ps.DATAB
dv[3] => ps.DATAB
dv[4] => ps.DATAB
dv[5] => ps.DATAB
dv[6] => ps.DATAB
increment => ns[6].OUTPUTSELECT
increment => ns[5].OUTPUTSELECT
increment => ns[4].OUTPUTSELECT
increment => ns[3].OUTPUTSELECT
increment => ns[2].OUTPUTSELECT
increment => ns[1].OUTPUTSELECT
increment => ns[0].OUTPUTSELECT
increment => cycle.IN1
display[0] <= ps[0].DB_MAX_OUTPUT_PORT_TYPE
display[1] <= ps[1].DB_MAX_OUTPUT_PORT_TYPE
display[2] <= ps[2].DB_MAX_OUTPUT_PORT_TYPE
display[3] <= ps[3].DB_MAX_OUTPUT_PORT_TYPE
display[4] <= ps[4].DB_MAX_OUTPUT_PORT_TYPE
display[5] <= ps[5].DB_MAX_OUTPUT_PORT_TYPE
display[6] <= ps[6].DB_MAX_OUTPUT_PORT_TYPE
cycle <= cycle.DB_MAX_OUTPUT_PORT_TYPE


